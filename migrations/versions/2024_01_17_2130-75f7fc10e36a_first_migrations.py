"""first migrations

Revision ID: 75f7fc10e36a
Revises: 
Create Date: 2024-01-17 21:30:16.235539

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy import orm
from sqlalchemy import insert
from src.repository.sql_repositopy.models import RoomORM, RackORM, CustomerORM
from migrations.data_for_insert import RACKS, ROOMS, CUSTOMERS

# revision identifiers, used by Alembic.
revision: str = '75f7fc10e36a'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('customers',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('rooms',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('racks',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(), nullable=False),
                    sa.Column('size', sa.Integer(), nullable=False),
                    sa.Column('state', sa.String(), nullable=False),
                    sa.Column('customer_id', sa.Integer(), nullable=False),
                    sa.Column('room_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
                    sa.ForeignKeyConstraint(['room_id'], ['rooms.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    # ### end Alembic commands ###
    bind = op.get_bind()
    session = orm.create_session(bind)
    for room in ROOMS:
        stmt = insert(RoomORM).values(**room)
        session.execute(stmt)

    for customer in CUSTOMERS:
        stmt = insert(CustomerORM).values(**customer)
        session.execute(stmt)

    for rack in RACKS:
        stmt = insert(RackORM).values(**rack)
        session.execute(stmt)

    session.commit()


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('racks')
    op.drop_table('rooms')
    op.drop_table('customers')
    # ### end Alembic commands ###
